{"E1": "printFreezingDisplayLogsopening app wtoken = AppWindowToken{<*>", "E2": "acquire lock=<*>", "E3": "ready=<*>", "E4": "Skipping AppWindowToken{<*>", "E5": "visible is <*>", "E6": "<*> is <*>", "E7": "visible is <*> gt <*>", "E8": "release:lock=<*>", "E9": "updateClipping isOverlap:<*>, getTopPadding=<*>, Translation=<*>", "E10": "updateDimmedActivatedHideSensitive overlap:<*>", "E11": "getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "E12": "setSystemUiVisibility vis=<*>", "E13": "cancelAutohide", "E14": "notifyUiVisibilityChanged:vis=<*>, SystemUiVisibility=<*>", "E15": "Destroying surface Surface(name=<*>) called by <*>", "E16": "userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "E17": "orientation change is complete, call stopFreezingDisplayLocked", "E18": "Screen frozen for <*> due to Window{<*> <*> <*>}", "E19": "startAnimation begin", "E20": "startAnimation end", "E21": "remove(PendingIntent{<*>: PendingIntentRecord{<*> <*> broadcastIntent}}) changed bounds; rebatching", "E22": "rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED", "E23": "Application requested orientation <*>, got rotation <*> which has compatible metrics", "E24": "shouldBlockLocation running ...", "E25": "shouldBlockLocation  ret:<*>", "E26": "getNeighboringCellInfo calling app is <*>", "E27": "Releasing suspend blocker \"<*>\".", "E28": "HBM brightnessIn =<*>", "E29": "HBM brightnessOut =<*>", "E30": "Animating brightness: target=<*>, rate=<*>", "E31": "suspendAutohide", "E32": "interceptKeyTq keycode=<*>", "E33": "interceptKeyBeforeQueueing: key <*> , result : <*>", "E34": "resumeSuspendedAutohide", "E35": "querySoundEffectsEnabled...", "E36": "Acquiring suspend blocker \"<*>\".", "E37": "Bad activity token: <*>", "E38": "<*>: <*> cannot be cast to <*>", "E39": "onTouchEvent::<*>, x=<*>, y=<*>", "E40": "schedulePeek", "E41": "getRingtonePlayer...", "E42": "disable: < expand ICONS* alerts SYSTEM_INFO* back home recent clock navigationbar search quick_settings >", "E43": "updateLightsLocked,mInCall =<*>,mScreenOn = <*>,ledNotification == <*>", "E44": "updateLightsLocked,turn off notificationLight", "E45": "overlapAmount:<*>", "E46": "state.clipTopAmount:<*>, i:<*>", "E47": "onExpandingStarted", "E48": "onTrackingStarted", "E49": "cancelPeek: <*>", "E50": "flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*>", "E51": "onTrackingStopped: <*>", "E52": "onExpandingFinished", "E53": "Sending non-protected broadcast <*> from system <*> pkg <*>", "E54": "logNotificationVisibilityChanges runInThread start", "E55": "onNotificationVisibilityChanged called", "E56": "logNotificationVisibilityChanges runInThread over", "E57": "isSimPinSecure mSimDatas is null or empty", "E58": "registerCallback not in UI.", "E59": "<*>: Must execute in UI", "E60": "*** register callback for <*>", "E61": "*** unregister callback for <*>", "E62": "[PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*>", "E63": "[PhoneIntfMgr] getDataEnabled: subId=<*> retVal=<*>", "E64": "onInterceptTouchEvent MotionEvent { action=<*>", "E65": "playSoundEffect   effectType: <*>", "E66": "animateCollapsePanels:flags=<*>, force=<*>, delayed=<*>, mExpandedVisible=<*>", "E67": "START <*>", "E68": "ActivityRecord info: ActivityInfo{<*> <*>}, euid: <*>", "E69": "onNotificationClick called", "E70": "cancelNotification,index:<*>", "E71": "cancelNotification,cancelNotificationLocked,callingUid = <*>,callingPid = <*>", "E72": "cancelNotificationLocked called,tell the app,reason = <*>", "E73": "cancelNotificationLocked:<*>|<*>|<*>|<*>|<*>", "E74": "cancelNotificationLocked,remove =<*>", "E75": "applyOptionsLocked: Unknown animationType=<*>", "E76": "Taking screenshot from Surface with crop:[Rect(<*>", "E77": "removeNotification:<*>|<*>|<*>|<*>|<*>", "E78": "updateNotificationShade: total=<*>, active=<*>", "E79": "The change in focus caused us to need to do a layout begin", "E80": "The change in focus caused us to need to do a layout end", "E81": "setLightsOn(<*>)", "E82": "removeNotificationChildren", "E83": "Skipping, withExcluded: <*>, <*> { flg=<*> cmp=<*> bnds=<*> }", "E84": "Skipping, withExcluded: <*>, <*> { act=<*> flg=<*> cmp=<*> (has extras) }", "E85": "Skipping, withExcluded: <*>, <*> { flg=<*> cmp=<*> (has extras) }", "E86": "getRecentTasks: num=<*>,flags=<*>,totalTasks=<*>", "E87": "getRecentTasks: topActivity=ComponentInfo{<*>}", "E88": "cancelNotificationWithTag pid <*>,uid = <*>,tag = <*>,pkg =<*>,id =<*>", "E89": "makeExpandedInvisible: mExpandedVisible=<*>", "E90": "closeQs", "E91": "instantCollapse", "E92": "disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >", "E93": "getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output", "E94": "isMusicActive...", "E95": "Start dump, calling from : pid=<*>, uid=<*>", "E96": "setWiredDeviceConnectionState  type: <*>  state: <*>", "E97": "ActivityManagerService,attachApplication,callingPid = <*>", "E98": "isBluetoothA2dpOn...", "E99": "isBluetoothScoOn...", "E100": "getLastAudibleStreamVolume  treamType: <*>", "E101": "getDevicesForStream  streamType: <*>", "E102": "cleanUpApplicationRecord -- <*>", "E103": "cleanUpApplicationRecordLocked, pid: <*>, restart: <*>", "E104": "cleanUpApplicationRecordLocked, reset pid: <*>, euid: <*>", "E105": "stopWifiDisplayScanLocked record.mWifiDisplayScanRequested=<*>", "E106": "stopWifiDisplayScanLocked mWifiDisplayScanRequestCount=<*>", "E107": "getMode...", "E108": "setSpeakerphoneOn  on: <*>", "E109": "setSpeakerphoneOn on:<*>", "E110": "sending alarm Alarm{<*>", "E111": "Received TIME_TICK alarm; rescheduling", "E112": "scheduleTimeTickEvent triggerAtTime = <*>", "E113": "received broadcast <*>", "E114": "handleTimeUpdate", "E115": "Killing <*> (adj <*>): empty for <*>", "E116": "Unable to start service Intent { act=<*> cmp=<*> } U=<*>: not found", "E117": "unregisterAudioFocusListener...", "E118": "abandonAudioFocus", "E119": "[HSM] stayAwake <*> uid: <*>, pid: <*>", "E120": "Pid:<*> MediaPlayer destructor", "E121": "Process <*> (pid <*>) has died", "E122": "Scheduling restart of crashed service <*> in <*>", "E123": "new Process app=ProcessRecord{<*> <*>}, name: <*>, euid: <*>", "E124": "Start proc <*> for service <*>", "E125": "enqueueNotificationInternal: pkg=<*>", "E126": "enqueueNotificationInternal: n.getKey = <*>|<*>|<*>|<*>|<*>", "E127": "getRingerMode...", "E128": "addNotification key=<*>|<*>|<*>|<*>|<*>", "E129": "mHeadsUpExistenceChangedRunnable", "E130": "Marking notification as seen <*>|<*>|<*>|<*>|<*>", "E131": "onNotificationExpansionChanged called", "E132": "ACTIVITY check resid: <*>, size=<*>", "E133": "getAllCellInfo is blocked by permission manager . callingPackage = <*>", "E134": "getCellLocation is blocked by permission manager uid:<*> pid:<*>", "E135": "isWiredHeadsetOn...", "E136": "setDataSource(<*>, <*>, <*>)", "E137": "getStreamVolume  treamType: <*>", "E138": "updateIsPoweredLocked: wasPowered=<*>, mIsPowered=<*>, oldPlugType=<*>, mPlugType=<*>, mBatteryLevel=<*>", "E139": "ACTION_BATTERY_CHANGED AMP: <*>; Volt: <*>", "E140": "updateChargingLocked: charging=<*>", "E141": "onReceive, action:<*>", "E142": "ACTION_BATTERY_CHANGED pluggedType: <*>", "E143": "ApStaDisabledState what=<*>", "E144": "DefaultState what=<*>", "E145": "battery changed pluggedType: <*>", "E146": "RefreshBatteryInfo isBatteryLow: <*>", "E147": "ChargingSpeed  Wattage: <*> ST: <*> --> <*>", "E148": "handleBatteryUpdate", "E149": "START <*> {flg=<*> cmp=<*> (has extras)} from uid <*> on display <*>", "E150": "startActivity called from non-Activity context; forcing <*> for: Intent { flg=<*> cmp=<*> (has extras) }"}
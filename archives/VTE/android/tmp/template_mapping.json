{"E1": "printFreezingDisplayLogsopening app wtoken =<*>", "E2": "acquire lock=<*>", "E3": "ready=<*>", "E4": "Skipping AppWindowToken{<*>", "E5": "visible is <*>", "E6": "<*> is <*>", "E7": "visible is <*> gt <*>", "E8": "release:lock=<*>", "E9": "updateClipping isOverlap:<*>, getTopPadding=<*>, Translation=<*>", "E10": "updateDimmedActivatedHideSensitive overlap:<*>", "E11": "getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output", "E12": "setSystemUiVisibility vis=<*>", "E13": "cancelAutohide", "E14": "notifyUiVisibilityChanged:vis=<*>, SystemUiVisibility=<*>", "E15": "Destroying surface Surface(name=<*>", "E16": "userActivityNoUpdateLocked: eventTime=<*>, event=<*>, flags=<*>, uid=<*>", "E17": "orientation change is complete, call stopFreezingDisplayLocked", "E18": "Screen frozen for +<*> due to Window{<*> <*> <*>}", "E19": "startAnimation begin", "E20": "startAnimation end", "E21": "remove(PendingIntent{<*>: PendingIntentRecord{<*> <*> broadcastIntent}}) changed bounds; rebatching", "E22": "rotationForOrientationLw(orient=<*>, last=<*>); user=<*> USER_ROTATION_LOCKED", "E23": "Application requested orientation <*>, got rotation <*> which has compatible metrics", "E24": "shouldBlockLocation running ...", "E25": "shouldBlockLocation  ret:<*>", "E26": "getNeighboringCellInfo calling app is <*>", "E27": "Releasing suspend blocker \"<*>\".", "E28": "HBM brightnessIn =<*>", "E29": "HBM brightnessOut =<*>", "E30": "Animating brightness: target=<*>, rate=<*>", "E31": "suspendAutohide", "E32": "interceptKeyTq keycode=<*>", "E33": "interceptKeyBeforeQueueing: key <*> , result : <*>", "E34": "resumeSuspendedAutohide", "E35": "querySoundEffectsEnabled...", "E36": "Acquiring suspend blocker \"<*>\".", "E37": "Bad activity token: <*>@<*>", "E38": "<*>: <*> cannot be cast to <*>$Token", "E39": "onTouchEvent::<*>, x=<*>, y=<*>", "E40": "schedulePeek", "E41": "getRingtonePlayer...", "E42": "disable: < expand ICONS* alerts SYSTEM_INFO* back home recent clock navigationbar search quick_settings >", "E43": "updateLightsLocked,mInCall =<*>", "E44": "updateLightsLocked,turn off notificationLight", "E45": "<*>:<*>, i:<*>", "E46": "onExpandingStarted", "E47": "onTrackingStarted", "E48": "cancelPeek: <*>", "E49": "flingToHeight: vel=<*>, expand=<*>, target=<*>, collapseSpeedUpFactor=<*>, expandBecauseOfFalsing=<*>", "E50": "onTrackingStopped: <*>", "E51": "onExpandingFinished", "E52": "Sending non-protected broadcast <*> from system <*>:<*> pkg <*>", "E53": "logNotificationVisibilityChanges runInThread start", "E54": "onNotificationVisibilityChanged called", "E55": "logNotificationVisibilityChanges runInThread over", "E56": "isSimPinSecure mSimDatas is null or empty", "E57": "registerCallback not in UI.", "E58": "<*>: Must execute in UI", "E59": "*** register callback for <*>@<*>", "E60": "*** unregister callback for null", "E61": "[PhoneIntfMgr] getDataEnabled: subId=<*> phoneId=<*>", "E62": "[PhoneIntfMgr] getDataEnabled: subId=<*> retVal=<*>", "E63": "onInterceptTouchEvent MotionEvent { action=<*>", "E64": "playSoundEffect   effectType: <*>", "E65": "animateCollapsePanels:flags=<*>, force=<*>, delayed=<*>, mExpandedVisible=<*>", "E66": "START <*>", "E67": "ActivityRecord info: ActivityInfo{<*> <*>}, euid: <*>", "E68": "onNotificationClick called", "E69": "cancelNotification,index:<*>", "E70": "cancelNotification,cancelNotificationLocked,callingUid =<*>,callingPid =<*>", "E71": "cancelNotificationLocked called,tell the app,reason =<*>", "E72": "cancelNotificationLocked:<*>|<*>|<*>|null|<*>", "E73": "cancelNotificationLocked,remove =<*>", "E74": "applyOptionsLocked: Unknown animationType=<*>", "E75": "Taking screenshot from Surface with crop:[Rect(<*>", "E76": "removeNotification:<*>|<*>|<*>|null|<*>", "E77": "updateNotificationShade: total=<*>, active=<*>", "E78": "The change in focus caused us to need to do a layout begin", "E79": "The change in focus caused us to need to do a layout end", "E80": "setLightsOn(<*>)", "E81": "removeNotificationChildren", "E82": "Skipping, withExcluded: <*>", "E83": "Skipping, withExcluded: <*>, <*>:Intent { act=<*> flg=<*> cmp=<*>/.InCallActivity (has extras) }", "E84": "Skipping, withExcluded: <*>, <*>:Intent { flg=<*> cmp=<*>/.plugin.base.stub.WXEntryActivity (has extras) }", "E85": "Skipping, withExcluded: <*>, <*>:Intent { flg=<*> cmp=<*>/.business.lockscreen.LockScreenActivity (has extras) }", "E86": "getRecentTasks: num=<*>,flags=<*>,totalTasks=<*>", "E87": "getRecentTasks: topActivity=<*>{<*>}", "E88": "cancelNotificationWithTag pid <*>", "E89": "makeExpandedInvisible: mExpandedVisible=<*>", "E90": "closeQs", "E91": "instantCollapse", "E92": "disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >", "E93": "*** unregister callback for <*>@<*>", "E94": "getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output", "E95": "isMusicActive...", "E96": "Start dump, calling from : pid=<*>, uid=<*>", "E97": "setWiredDeviceConnectionState  type: -<*>  state: <*>", "E98": "NoMatch", "E99": "ActivityManagerService,attachApplication,callingPid =<*>", "E100": "isBluetoothScoOn...", "E101": "getLastAudibleStreamVolume  treamType: <*>", "E102": "getDevicesForStream  streamType: <*>", "E103": "cleanUpApplicationRecord -- <*>", "E104": "cleanUpApplicationRecordLocked, pid: <*>, restart: <*>", "E105": "cleanUpApplicationRecordLocked, reset pid: <*>, euid: <*>", "E106": "stopWifiDisplayScanLocked <*>=<*>", "E107": "stopWifiDisplayScanLocked mWifiDisplayScanRequestCount=<*>", "E108": "getMode...", "E109": "setSpeakerphoneOn  on: <*>", "E110": "setSpeakerphoneOn on:<*>", "E111": "sending alarm Alarm{<*>", "E112": "Received TIME_TICK alarm; rescheduling", "E113": "scheduleTimeTickEvent triggerAtTime =<*>", "E114": "received broadcast <*>", "E115": "handleTimeUpdate", "E116": "Killing <*>:<*> (adj <*>): empty for <*>", "E117": "Unable to start service Intent { act=<*> cmp=<*> } U=<*>: not found", "E118": "unregisterAudioFocusListener...", "E119": "abandonAudioFocus", "E120": "[HSM] stayAwake <*> uid: <*>, pid: <*>", "E121": "Pid:<*> MediaPlayer destructor", "E122": "Process <*>:qzone (pid <*>) has died", "E123": "Scheduling restart of crashed service <*> in <*>", "E124": "new Process app=<*>", "E125": "Start proc <*>:<*>:qzone<*> for service <*>", "E126": "enqueueNotificationInternal: pkg=<*>", "E127": "enqueueNotificationInternal: <*>", "E128": "getRingerMode...", "E129": "addNotification key=<*>|<*>|<*>|null|<*>", "E130": "mHeadsUpExistenceChangedRunnable", "E131": "Marking notification as seen <*>|<*>|<*>|null|<*>", "E132": "onNotificationExpansionChanged called", "E133": "ACTIVITY check resid: <*>, size=<*>", "E134": "getAllCellInfo is blocked by permission manager . callingPackage =<*>", "E135": "getCellLocation is blocked by permission manager uid:<*> pid:<*>", "E136": "isWiredHeadsetOn...", "E137": "setDataSource(<*>, <*>, <*>)", "E138": "getStreamVolume  treamType: <*>", "E139": "updateIsPoweredLocked: wasPowered=<*>, mIsPowered=<*>, oldPlugType=<*>, mPlugType=<*>, mBatteryLevel=<*>", "E140": "ACTION_BATTERY_CHANGED AMP: <*>; Volt: <*>", "E141": "updateChargingLocked: charging=<*>", "E142": "onReceive, action:<*>", "E143": "ACTION_BATTERY_CHANGED pluggedType: <*>", "E144": "ApStaDisabledState what=<*>", "E145": "DefaultState what=<*>", "E146": "battery changed pluggedType: <*>", "E147": "RefreshBatteryInfo isBatteryLow: <*>", "E148": "ChargingSpeed  Wattage: -<*> ST: <*> --> <*>", "E149": "handleBatteryUpdate", "E150": "START <*> {flg=<*> cmp=<*>/.ui.LauncherUI (has extras)} from uid <*> on display <*>", "E151": "startActivity called from non-Activity context; forcing <*> for: Intent { flg=<*> cmp=<*>/.ui.LauncherUI (has extras) }"}
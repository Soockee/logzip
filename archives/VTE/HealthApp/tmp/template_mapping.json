{"E1": "onStandStepChanged <*>", "E2": "onExtend:<*> <*> <*> <*>", "E3": "onReceive action: <*>", "E4": "processHandleBroadcastAction action:<*>", "E5": "flush sensor data", "E6": "NoMatch", "E7": "setTodayTotalDetailSteps=<*>", "E8": "calculateCaloriesWithCache totalCalories=<*>", "E9": "calculateAltitudeWithCache totalAltitude=<*>", "E10": "REPORT : <*> <*> <*> <*>", "E11": "isScreenOn <*>", "E12": "screen status unknown,think screen on", "E13": "flushTempCacheToDB by stand", "E14": "Alarm uploadStaticsToDB totalSteps=<*>:<*>:<*>:<*>", "E15": "writeDataToDB size <*>", "E16": "upLoadOneMinuteDataToEngine time=<*>,<*>,<*>,<*>,<*>", "E17": "getBinderPackageName packageName =<*>", "E18": "getAppContext() isAppValid health or wear, packageName =<*>", "E19": "insertHiHealthData() checkAppType  <*> appID =<*>", "E20": "insertHiHealthData() size =<*>", "E21": "saveHealthDetailData() deviceID =<*>,clientID=<*>,id=<*>", "E22": "saveStatData() type =<*>", "E23": "new date =<*>, type=<*>,<*>,old=<*>", "E24": "saveHealthDetailData() saveOneDetailData fail hiHealthData =<*>,type =<*>", "E25": "bulkSaveDetailHiHealthData() size =<*>,totalTime =<*>", "E26": "startListenerChange subscribeList =<*>[<*>]", "E27": "insertHiHealthData() bulkSaveDetailHiHealthData fail errorCode =<*>,errorMessage =<*>ERR_DATA_INSERT", "E28": "insertHiHealthData() end totalTime =<*>", "E29": "uploadStaticsToDB() onResult  type =<*> obj=<*>", "E30": "uploadStaticsToDB failed message=<*>", "E31": "checkInsertStatus stepSum or calorieSum is enough", "E32": "checkInsertStatus stepStatSum or calorieStatSum is enough", "E33": "stepSyncOrNot appSynTimes is <*>, statsyncTimes is <*>", "E34": "startInsertSportSync start auto sync,app is <*>", "E35": "checkFirstSyncByType no such data in db ,type is <*> deviceCode is <*>", "E36": "startInsertSportSync first <*> steps sync,do all sync", "E37": "startSync hiSyncOption =<*>", "E38": "needAutoSync autoSyncSwitch is open", "E39": "initDataPrivacy the dataPrivacy switch is open, start push health data!", "E40": "initDataPrivacy the dataPrivacy is <*>", "E41": "initUserPrivacy the userPrivacy switch is open, start push user data!", "E42": "initUserPrivacy the userPrivacy is <*>", "E43": "ifCanSync not! no cloud version", "E44": "sendSyncFailedBroadcast", "E45": "saveRealTimeHealthDatasStat() size =<*>,totalTime =<*>", "E46": "InsertCallBack() onSuccess  type =<*> data=<*>", "E47": "InsertEvent success begin:<*> end:<*>", "E48": "setWriteDBLastDataMinute=<*>", "E49": "setWriteDBLastDataMinute success", "E50": "<*> result success", "E51": "timeStamp back,extendReportTimeStamp=<*>", "E52": "startTimer start autoSync", "E53": "stepSyncOrNot appSynTimes is <*>", "E54": "getTodaySportData mStepsRecordManager=<*>@<*>", "E55": "theDayChanged <*>", "E56": "initEnviroument", "E57": "getStepCounterStatus", "E58": "reStartStepCounter", "E59": "registersensorsuccess: <*>", "E60": "clear()", "E61": "tryToRecordAsBasicStepData bWrite <*>", "E62": "setBasicStandardSteps basicStandardStep=<*> restartSteps=<*>", "E63": "setDiffTotalSteps=<*>", "E64": "<*>|<*>|<*>|<*>", "E65": "reload : <*> restar <*>", "E66": "next day:<*>", "E67": "setGoalNotifiShownRecord <*> <*>", "E68": "closeNotification...", "E69": "deleteHealthNotification()", "E70": "checkCurrentDay a new day comes , reset basicSyncCondition, currentDay is <*> oldDay is <*>"}
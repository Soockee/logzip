############################## _getSysMsgList
(DiskStore.Normal:<*>) <*> <*>
(ImportBailout.Error:<*>) Asked to exit for Diskarb
**** [BroadcomBluetoothHostController][SetupController] -- Delay HCI Reset by <*>  ****
**** [BroadcomBluetoothHostControllerUSBTransport][start] -- Completed (matched on Device) -- <*> ****
**** [IOBluetoothFamily][ProcessBluetoothTransportShowsUpActionWL] -- calling IOBluetoothFamily's registerService() -- <*> -- <*> -- <*> ****
**** [IOBluetoothFamily][ProcessBluetoothTransportShowsUpActionWL] -- Connected to the transport successfully -- <*> -- <*> -- <*> ****
**** [IOBluetoothHostControllerUSBTransport][start] -- completed -- result = <*> -- <*> ****
.sdef warning for argument '' of command 'can continue previous list' in suite 'Microsoft Word Suite': '<*>' is not a valid type name.
[<*>/<*>:WARNING:dns_config_service_posix.cc(<*>)] Failed to read DnsConfig.
[<*>] (Fig) signalled err=<*>
[<*>] <<<< Boss >>>> figPlaybackBossPrerollCompleted: unexpected preroll-complete notification
[<*>] <<<< CRABS >>>> crabsFlumeHostAvailable: [<*>] Byte flume reports host available again.
[<*>] <<<< CRABS >>>> crabsFlumeHostUnavailable: [<*>] Byte flume reports host unavailable.
[<*>] <<<< CRABS >>>> crabsWaitForLoad: [<*>] Wait time out - <*> (msRequestTimeout <*>)
[<*>] <<<< IQ-CA >>>> piqca_setUsePreQueue: (<*>) rejecting report of layer being serviced - IQ has not yet begun to update
[<*>] FigAgglomeratorSetObjectForKey signalled err=<*> (kFigStringConformerError_ParamErr) (NULL key) at <*> line <*>
[<*>] itemasync_CopyProperty signalled err=<*> (kFigBaseObjectError_Invalidated) (invalidated) at <*> line <*>
[<*>] itemasync_SetProperty signalled err=<*> (kFigBaseObjectError_Invalidated) (invalidated) at <*> line <*>
[<*>] mv_LowLevelCheckIfVideoPlayableUsingDecoder signalled err=<*> (kFigMediaValidatorError_VideoCodecNotSupported) (video codec <*>) at  line <*>
[Accounts] Current connection, <NSXPCConnection: <*>> connection from pid <*>, doesn't have account access.
[Accounts] Failed to update account with identifier <*>-<*>-<*>, error: Error Domain=ABAddressBookErrorDomain Code=<*> "(<*>)"
[BluetoothHIDDeviceController] EventServiceConnectedCallback
[BluetoothHIDDeviceController] EventServiceDisconnectedCallback
[BluetoothHIDDeviceController]ERROR: Could not find the disconnected object
[CardDAVPlugin-ERROR] -getPrincipalInfo:[_controller supportsRequestCompressionAtURL:<*>] Error Domain=NSURLErrorDomain Code=<*> "The Internet connection appears to be offline." UserInfo={NSUnderlyingError=<*> {Error Domain=kCFErrorDomainCFNetwork Code=<*> "The Internet connection appears to be offline." UserInfo={NSErrorFailingURLStringKey=<*>, NSErrorFailingURLKey=<*>, _kCFStreamErrorCodeKey=<*>, _kCFStreamErrorDomainKey=<*>, NSLocalizedDescription=The Internet connection appears to be offline.}}, NSErrorFailingURLStringKey=<*>, NSErrorFailingURLKey=<*>, _kCFStreamErrorDomainKey=<*>, _kCFStreamErrorCodeKey=<*>, NSLocalizedDescription=The Internet connection appears to be offline.}
[CardDAVPlugin-ERROR] -getPrincipalInfo:[_controller supportsRequestCompressionAtURL:<*>] Error Domain=NSURLErrorDomain Code=<*> "The request timed out." UserInfo={NSUnderlyingError=<*> {Error Domain=kCFErrorDomainCFNetwork Code=<*> "The request timed out." UserInfo={NSErrorFailingURLStringKey=<*>, NSErrorFailingURLKey=<*>, _kCFStreamErrorCodeKey=<*>, _kCFStreamErrorDomainKey=<*>, NSLocalizedDescription=The request timed out.}}, NSErrorFailingURLStringKey=<*>, NSErrorFailingURLKey=<*>, _kCFStreamErrorDomainKey=<*>, _kCFStreamErrorCodeKey=<*>, NSLocalizedDescription=The request timed out.}
[<*>] [Refusing to parse response to PROPPATCH because of content-type: [text/html; charset=<*>].]
[<*>] [Account <*> timed out when executing operation: <CalDAVAccountRefreshQueueableOperation: <*>; Sequence: <*>>]
[<*>] [Account refresh failed with error: Error Domain=CoreDAVHTTPStatusErrorDomain Code=<*> "(<*>)" UserInfo={AccountName=<*>, CalDAVErrFromRefresh=<*>, CoreDAVHTTPHeaders=<CFBasicHash <*> [<*>]>{type = immutable dict, count = <*>, entries => <*> : Connection = <CFString <*> [<*>]>{contents = "keep-alive"} <*> : Content-Type = text/html <*> : Content-Length = <*> <*> : Server = nginx <*> : Date = <CFString <*> [<*>]>{contents = "<*>, <*> <*> <*> <*> <*>"} } }]
[<*>] [Adding [<CalDAVAccountRefreshQueueableOperation: <*>; Sequence: <*>>] to failed operations.]
[HID] [ATC] [Error] AppleDeviceManagementHIDEventService::start Could not make a string from out connection notification key
[HID] [ATC] AppleDeviceManagementHIDEventService::processWakeReason Wake reason: Host (<*>)
[HID] [MT] AppleActuatorHIDEventDriver::start entered
[HID] [MT] AppleMultitouchDevice::start entered
[HID] [MT] AppleMultitouchDevice::willTerminate entered
[HID] [MT] MTActuatorManagement::getActuatorRef Calling MTActuatorOpen() outside of MTTrackpadHIDManager.
[IOBluetoothFamily][staticBluetoothTransportShowsUp] -- Received Bluetooth Controller register service notification -- <*>
[IOBluetoothHostController::setConfigState] calling registerService
-[ISGenerateImageOp generateImageWithCompletion:] Failed to composit image for descriptor <ISBindingImageDescriptor: <*>>.
-[NETClientConnection effectiveBundleID] using process name apsd as bundle ID (this is expected for daemons without bundle ID
-[NETClientConnection effectiveBundleID] using process name CalendarAgent as bundle ID (this is expected for daemons without bundle ID
-[NETClientConnection evaluateCrazyIvan46] CI46 - Perform CrazyIvan46! <*> <*> <*>
-[NetworkAnalyticsEngine _writeJournalRecord:fromCellFingerprint:key:atLOI:ofKind:lqm:isFaulty:] Hashing of the primary key failed. Dropping the journal record.
[QL] No sandbox token for request <QLThumbnailRequest <*>>, it will probably fail
-[SFLListManager(ServiceReplyProtocol) notifyChanges:toListWithIdentifier:] Notified of item changes to list with identifier com.apple.LSSharedFileList.RecentApplications
-[SOAPParser:<*> parser:didStartElement:namespaceURI:qualifiedName:attributes:] Type not found in EWSItemType for ExchangePersonIdGuid (t:ExchangePersonIdGuid)
-[UABestAppSuggestionManager notifyBestAppChanged:type:options:bundleIdentifier:activityType:dynamicIdentifier:when:confidence:deviceName:deviceIdentifier:deviceType:] (<*>) UASuggestedActionType=<*> (<*>)/(<*>) opts=(<*>) when=<*> <*> <*> confidence=<*> from=(<*>)/(<*>) (<*> <*>)
__<*>-[NETClientConnection evaluateCrazyIvan46]_block_invoke CI46 - Hit by torpedo! <*> <*> <*>
__<*>-[NetworkAnalyticsEngine observeValueForKeyPath:ofObject:change:context:]_block_invoke unexpected switch value <*>
<*>(<*>) deny mach-lookup <*>
<*>(<*>) deny network-outbound <*>
<*> <*> | I | VoipWrapper  | <*>             | close video chat. llFriendUIN = <*>.
<*>::<*> - intel_rp = <*> dlla_reporting_supported = <*>
<*>::<*> - retries = <*>
<*>::<*>::postMessage bssid changed
<*>::prePCIWake - power up complete - took <*> us
<*>::setAwdlAutoMode Resuming AWDL
<*>::setAwdlOperatingMode Setting the AWDL operation mode from <*> to <*>
<*>::setAwdlSuspendedMode() Suspending AWDL, enterQuietMode(<*>)
<*> : BTLE discovered device with hash <<*> <*> <*>>
<*> : BTLE scanner Powered Off
<*> : BTLE scanner Powered On
<*> : BTLE scanning <*>
<*> : Discoverable mode changed to <*>
<*> : Finished generating hashes
<*> : Purged contact hashes
<*> : Scanning mode Contacts Only
<*> : Started generating hashes
<*> : Starting AirDrop server for user <*> on wake
<*> ERROR:    <*>: timed out after <*> (<*> <*>); mMajorChangePending=<*>
-_continuousScroll is deprecated for NSScrollWheel. Please use -hasPreciseScrollingDeltas.
<*>: IPv6 address <*> has no prefix
<*> <*> GoogleSoftwareUpdateAgent[<*>/<*>] [lvl=<*>] -[KSAgentApp performSelfUpdateWithEngine:] Checking for self update with Engine: <KSUpdateEngine:<*> ticketStore=<KSPersistentTicketStore:<*> store=<KSKeyedPersistentStore:<*> path="<*>" lockFile=<KSLockFile:<*> path="<*>" locked=<*> > >> processor=<KSActionProcessor:<*> delegate=<KSUpdateEngine:<*>> isProcessing=<*> actionsCompleted=<*> progress=<*> errors=<*> currentActionErrors=<*> events=<*> currentActionEvents=<*> actionQueue=( ) > delegate=(<*>) serverInfoStore=<KSServerPrivateInfoStore:<*> path="<*>"> errors=<*> >
<*> <*> GoogleSoftwareUpdateAgent[<*>/<*>] [lvl=<*>] -[KSAgentApp updateProductWithProductID:usingEngine:] Checking for updates for "<*>" using engine <KSUpdateEngine:<*> ticketStore=<KSPersistentTicketStore:<*> store=<KSKeyedPersistentStore:<*> path="<*>" lockFile=<KSLockFile:<*> path="<*>" locked=<*> > >> processor=<KSActionProcessor:<*> delegate=<KSUpdateEngine:<*>> isProcessing=<*> actionsCompleted=<*> progress=<*> errors=<*> currentActionErrors=<*> events=<*> currentActionEvents=<*> actionQueue=( ) > delegate=(<*>) serverInfoStore=<KSServerPrivateInfoStore:<*> path="<*>"> errors=<*> >
<*> <*> GoogleSoftwareUpdateAgent[<*>/<*>] [lvl=<*>] -[KSAgentApp(KeystoneDelegate) updateEngineFinishedWithErrors:] Keystone finished: errors=<*>
<*> <*> GoogleSoftwareUpdateAgent[<*>/<*>] [lvl=<*>] -[KSAgentApp(KeystoneThread) runKeystonesInThreadWithArg:] About to run checks for any other apps.
<*> <*> GoogleSoftwareUpdateAgent[<*>/<*>] [lvl=<*>] -[KSAgentApp(KeystoneThread) runKeystonesInThreadWithArg:] Checking with local engine: <KSUpdateEngine:<*> ticketStore=<KSPersistentTicketStore:<*> store=<KSKeyedPersistentStore:<*> path="<*>" lockFile=<KSLockFile:<*> path="<*>" locked=<*> > >> processor=<KSActionProcessor:<*> delegate=<KSUpdateEngine:<*>> isProcessing=<*> actionsCompleted=<*> progress=<*> errors=<*> currentActionErrors=<*> events=<*> currentActionEvents=<*> actionQueue=( ) > delegate=(<*>) serverInfoStore=<KSServerPrivateInfoStore:<*> path="<*>" errors=<*> >
<*> <*> GoogleSoftwareUpdateAgent[<*>/<*>] [lvl=<*>] -[KSMultiUpdateAction performAction] KSPromptAction had no updates to apply.
<*> <*> GoogleSoftwareUpdateAgent[<*>/<*>] [lvl=<*>] -[KSOmahaServer updateInfosForUpdateResponse:updateRequest:infoStore:upToDateTickets:updatedTickets:events:errors:] Response passed CUP validation.
<*> <*> GoogleSoftwareUpdateAgent[<*>/<*>] [lvl=<*>] -[KSOutOfProcessFetcher beginFetchWithDelegate:] KSOutOfProcessFetcher fetching from URL: "<*>"
<*> <*> GoogleSoftwareUpdateAgent[<*>/<*>] [lvl=<*>] -[KSOutOfProcessFetcher beginFetchWithDelegate:] KSOutOfProcessFetcher start fetch from URL: "<*>"
<*> <*> GoogleSoftwareUpdateAgent[<*>/<*>] [lvl=<*>] -[KSOutOfProcessFetcher(PrivateMethods) helperDidTerminate:] KSOutOfProcessFetcher fetch ended for URL: "<*>"
<*> <*> GoogleSoftwareUpdateAgent[<*>/<*>] [lvl=<*>] -[KSOutOfProcessFetcher(PrivateMethods) launchedHelperTaskForToolPath:error:] KSOutOfProcessFetcher launched '<*>' with process id: <*>
<*> <*> GoogleSoftwareUpdateAgent[<*>/<*>] [lvl=<*>] -[KSPrefetchAction performAction] KSPrefetchAction no updates to prefetch.
<*> <*> GoogleSoftwareUpdateAgent[<*>/<*>] [lvl=<*>] -[KSUpdateCheckAction performAction] KSUpdateCheckAction starting update check for ticket(s): {( <KSTicket:<*> productID=<*> version=<*> xc=<KSPathExistenceChecker:<*> path=<*> serverType=<*> url=<*> creationDate=<*> <*> tagPath=<*> tagKey=<*> brandPath=<*> brandKey=<*> versionPath=<*> versionKey=<*> cohort=<*> cohortName=<*> ticketVersion=<*> > )} Using server: <KSOmahaServer:<*> engine=<KSUpdateEngine:<*>> >
<*> <*> GoogleSoftwareUpdateAgent[<*>/<*>] [lvl=<*>] -[KSUpdateCheckAction performAction] KSUpdateCheckAction starting update check for ticket(s): {( <KSTicket:<*> productID=<*> version=<*> xc=<KSPathExistenceChecker:<*> path=<*> url=<*> creationDate=<*> <*>:<*> ticketVersion=<*> > )} Using server: <KSOmahaServer:<*> engine=<KSUpdateEngine:<*>> >
<*> <*> GoogleSoftwareUpdateAgent[<*>/<*>] [lvl=<*>] -[KSUpdateEngine updateAllExceptProduct:] KSUpdateEngine updating all installed products, except:'<*>'.
<*> <*> GoogleSoftwareUpdateAgent[<*>/<*>] [lvl=<*>] +[KSCodeSigningVerification verifyBundle:applicationId:error:] KSCodeSigningVerification verifying code signing for '<*>' with the requirement 'anchor apple generic and certificate <*>[<*>] exists and certificate <*>[<*>] exists and certificate <*>[<*>]="<*>" and (identifier="<*>")'
<*> <*> ksfetch[<*>/<*>] [lvl=<*>] KSHelperReceiveAllData() KSHelperTool read <*> bytes from stdin.
<*> <*> ksfetch[<*>/<*>] [lvl=<*>] main() Fetcher is exiting.
<*> <*> ksfetch[<*>/<*>] [lvl=<*>] main() Fetcher received a request: <NSMutableURLRequest: <*>> { URL: <*> }
<*> <*> ksfetch[<*>/<*>] [lvl=<*>] main() ksfetch done fetching.
<*> <*> ksfetch[<*>/<*>] [lvl=<*>] main() ksfetch fetching URL (<NSMutableURLRequest: <*>> { URL: <*> }) to folder:<*>
<*> <*> PM [AirPlayUIAgent] BecomingInactive: NSWorkspaceWillSleepNotification
-deviceDeltaY is deprecated for NSScrollWheel. Please use -scrollingDeltaY.
<<<< FigByteStream >>>> FigByteStreamStatsLogOneRead: ByteStream read of <*> bytes @ <*> took <*> sec. to complete, <*> reads >= <*> sec.
<<<< MediaValidator >>>> <*>: Unrecognized codec <*>.(<*>). Failed codec specific check.
<<<< MediaValidator >>>> mv_LookupCodecSupport: Unrecognized codec <*>
<IMMacNotificationCenterManager: <*>>:    NC Disabled: <*>
<IMMacNotificationCenterManager: <*>>:   DND Enabled: <*>
<IMMacNotificationCenterManager: <*>>: notification observer: <*>   notification: __CFNotification <*> {name = <*>}
<IMMacNotificationCenterManager: <*>>: Updating enabled: <*>   (Topics: ( ))
<IMMacNotificationCenterManager: <*>>: Updating enabled: <*>   (Topics: (<*>))
after trim url = <*>
AirPort: Link Down on <*>. Reason <*> (Unspecified).
AirPort: Link Down on <*>. Reason <*> (Disassociated because station leaving).
AirPort: Link Up on <*>
AppleActuatorDevice::start Entered
AppleActuatorDevice::stop Entered
AppleActuatorDeviceUserClient::start Entered
AppleActuatorDeviceUserClient::stop Entered
AppleActuatorHIDEventDriver: message service is terminated
AppleActuatorHIDEventDriver: stop
AppleCamIn::handleWakeEvent_gated
AppleCamIn::systemWakeCall - messageType = <*>
AppleCamIn::wakeEventHandlerThread
AppleThunderboltGenericHAL::earlyWake - complete - took <*> milliseconds
arp_client_transmit(<*>) failed, Network is down (<*>)
ARPT: <*>: <*>::platformWoWEnable: WWEN[disable]
ARPT: <*>: <*>::platformWoWEnable: WWEN[enable]
ARPT: <*>: <*>::powerChange: System Sleep
ARPT: <*>: <*>::powerChange: System Wake - Full Wake/ Dark Wake / Maintenance wake
ARPT: <*>: <*>::syncPowerState: WWEN[enabled]
ARPT: <*>: AQM agg params <*> maxlen hi/lo <*> <*> minlen <*> adjlen <*>
<*>: AQM agg results <*> len hi/lo: <*> <*> BAbitmap(<*>) <*> <*> <*> <*>
ARPT: <*>: ARPT: Wake Reason: Wake on Scan offload
ARPT: <*>: ARPT: Wake Reason: Wake on TCP Timeout
ARPT: <*>: framerdy <*> bmccmd <*> framecnt <*>
ARPT: <*>: IOPMPowerSource Information: <*>,  SleepType: <*>,  'ExternalConnected': <*>, 'TimeRemaining': <*>,
ARPT: <*>: <*>: leaveModulePoweredForOffloads: Wi-Fi will stay on.
ARPT: <*>: <*>: MDNS: <*> SRV Recs, <*> TXT Recs
ARPT: <*>: <*>: MDNS: IPV4 Addr: <*>
ARPT: <*>: <*>: MDNS: IPV6 Addr: <*>
ARPT: <*>: <*>: Roamed or switched channel, reason <*>, bssid <*>, last RSSI <*>
ARPT: <*>: <*>: setup_keepalive: interval <*>, retry_interval <*>, retry_count <*>
ARPT: <*>: <*>: setup_keepalive: Local IP: <*>
ARPT: <*>: <*>: setup_keepalive: Local port: <*>, Remote port: <*>
ARPT: <*>: <*>: setup_keepalive: Remote IP: <*>
ARPT: <*>: <*>: setup_keepalive: Seq: <*>, Ack: <*>, Win size: <*>
ARPT: <*>: <*>: wl_update_tcpkeep_seq: Original Seq: <*>, Ack: <*>, Win size: <*>
ARPT: <*>: <*>: wl_update_tcpkeep_seq: Updated seq/ack/win from UserClient Seq <*>, Ack <*>, Win size <*>
ARPT: <*>: wlc_dump_aggfifo:
Arranged view frame: {{<*>, <*>}, {<*>, <*>}}
ASL Sender Statistics
assertion failed: <*> [<*>-<*>-<*>]: <*>
ASSERTION FAILED: dvcAddrRef != ((void *)<*>) -[DriverServices getDeviceAddress:] line: <*>
bitmap_size <*>, previewSize <*>, writing <*> pages @ <*>
Bluetooth -- LE is supported - Disable LE meta event
booter start at <*> ms smc <*> ms, [<*>, <*>, <*>] total <*> ms, dsply <*>, <*> ms, tramp <*> ms
BuildActDeviceEntry enter
BuildActDeviceEntry exit
button report: <*>
Captive: [CNInfoNetworkActive:<*>] <*>: SSID '<*>' making interface primary (cache indicates network not captive)
Captive: CNPluginHandler <*>: Authenticated
Captive: CNPluginHandler <*>: Evaluating
Captive: CNPluginHandler <*>: Inactive
CCDataTap::profileRemoved, Owner: <*>, Name: <*>
CCFile::captureLog
CCFile::captureLog Received Capture notice id: <*>, reason = <*>
CCFile::captureLogRun Skipping current file Dir file <*>, Current File <*>
CCFile::captureLogRun() Exiting CCFile::captureLogRun
CCFile::copyFile fileName is <*>, source path:<*>, dest path:<*>
CCIOReporterFormatter::addRegistryChildToChannelDictionary streams <*>
CCIOReporterFormatter::refreshSubscriptionsFromStreamRegistry clearing out any previous subscriptions
CCLogTap::profileRemoved, Owner: <*>, Name: <*>
CCProfileMonitor::freeResources done
CCProfileMonitor::setStreamEventHandler
CCXPCService::setStreamEventHandler Registered for notification callback.
Central manager is not powered on
CFNetwork SSLHandshake failed (<*>)
CFPasteboardRef CFPasteboardCreate(CFAllocatorRef, CFStringRef) : failed to create global data
CGXDisplayDidWakeNotification [<*>]: posting kCGSDisplayDidWake
Checking iCDP status for DSID <*> (checkWithServer=<*>)
ChromeExistion main isUndetectWithCommand = <*>
ChromeExistion main strSendMsg = {"websitekey":<*>,"commandkey":<*>,"browserkey":<*>}
Cocoa scripting error for '<*>': four character codes must be four characters long.
<*>: scheduler_evaluate_activity told me to run this job; however, but the start time isn't for <*> seconds.  Ignoring.
Configuration Notice: ASL Module "<*>" claims selected messages. Those messages may not appear in standard system log files or in the ASL database.
Configuration Notice: ASL Module "<*>" sharing output destination "<*>" with ASL Module "<*>". Output parameters from ASL Module "<*>" override any specified in ASL Module "<*>".
CoreAnimation: timed out fence <*>
CoreAnimation: warning, deleted thread with uncommitted CATransaction; set CA_DEBUG_TRANSACTIONS=<*> in environment to log backtraces.
could discard act <*> inact <*> purgeable <*> spec <*> cleaned <*>
Could not get event name for stream/token: <*>: <*>: Request for stale data
Daemon connection invalidated!
DB Error: <*> "no such table: <*>"
DB Path: <*>
device_generate_desktop_screenshot: authw <*>(<*>), shield <*>(<*>)
device_generate_lock_screen_screenshot: authw <*>(<*>)[<*>, <*>, <*>, <*>] shield <*>(<*>), dev [<*>,<*>]
did discard act <*> inact <*> purgeable <*> spec <*> cleaned <*>
dnssd_clientstub ConnectToServer: connect() failed path:<*> Socket:<*> Err:<*> Errno:<*> Operation not permitted
dnssd_clientstub ConnectToServer: connect()-> No of tries: <*>
<*>: Will write to: <*>
efi pagecount <*>
en0: <*> country code set to '<*>'.
en0: BSSID changed to <*>
en0: channel changed to <*>
en0: manual intervention required!
en0: Supported channels <*>
enabling pid=<*> for plug-in <*>(<*>) <*> <*>
Error in CoreDragRemoveReceiveHandler: <*>
Error in CoreDragRemoveTrackingHandler: <*>
Error returned from iconservicesagent: (<*>)
extension <*> -> (<*>)
FA||Url||taskID[<*>] dealloc
Failed to connect (titleField) outlet from <*> to <*>: missing setter or instance variable
Failed to connect (view) outlet from <*> to <*>: missing setter or instance variable
Failed to stop a scan - central is not powered on: <*>
full wake promotion (reason <*>) <*> ms
full wake request (reason <*>) <*> ms
Google Chrome He[<*>] triggered unnest of range <*>-><*> of DYLD shared region in VM map <*>. While not abnormal for debuggers, this increases system memory footprint until the target exits.
Got an XPC error: Connection invalid
handle_will_sleep_auth_and_shield_windows: Reordering authw <*>(<*>) (lock state: <*>)
hciControllerOnline; HID devices? <*>
hibernate image path: <*>
hibernate_alloc_pages act <*>, inact <*>, anon <*>, throt <*>, spec <*>, wire <*>, wireinit <*>
hibernate_flush_memory: buffer_cache_gc freed up <*> wired pages
hibernate_machine_init pagesDone <*> sum2 <*>, time: <*> ms, disk(<*>) <*> Mb/s, comp bytes: <*> time: <*> ms <*> Mb/s, crypt bytes: <*> time: <*> ms <*> Mb/s
hibernate_machine_init reading
hibernate_machine_init: state <*>, image pages <*>, sum was <*>, imageSize <*>, image1Size <*>, conflictCount <*>, nextFree <*>
hibernate_newruntime_map time: <*> ms, IOPolledFilePollersOpen(), ml_get_interrupts_enabled <*>
hibernate_page_list_setall found pageCount <*>
hibernate_page_list_setall time: <*> ms
hibernate_page_list_setall(preflight <*>) start
hibernate_rebuild completed - took <*> msecs
hibernate_rebuild started
hibernate_rebuild_pmap_structs done: last_valid_compact_indx <*>
hibernate_setup(<*>) took <*> ms
hibernate_teardown completed - discarded <*>
hibernate_teardown: wired_pages <*>, free_pages <*>, active_pages <*>, inactive_pages <*>, speculative_pages <*>, cleaned_pages <*>, compressor_pages <*>
hibernate_teardown_pmap_structs done: last_valid_compact_indx <*>
host connection <NSXPCConnection: <*>> connection from pid <*> invalidated
Host controller terminated
hostControllerOnline - Number of Paired devices = <*>, List of Paired devices = ( "<*>" )
INIT -- Host controller is published
Internal name did not resolve to internal address!
Invalidating watch set.
IOHibernatePollerOpen(<*>)
IOPMrootDomain: idle cancel, state <*>
IOPolledFilePollersOpen(<*>) <*> ms
IOThunderboltSwitch<<*>>(<*>)::listenerCallback - Thunderbolt HPD packet for route = <*> port = <*> unplug = <*>
jemmytest
kern_open_file_for_direct_io took <*> ms
kern_open_file_for_direct_io(<*>)
KeychainGetICDPStatus: keychain: <*>
KeychainGetICDPStatus: status: <*>
Location icon should now be in state '<*>'
mDNS_DeregisterInterface: Frequent transitions for interface <*> (<*>)
mDNS_RegisterInterface: Frequent transitions for interface <*> (<*>)
network changed: <*>(<*>) DNS+ Proxy+ SMB
network changed: <*>(<*>) DNS- Proxy-
network changed: <*>(<*>) <*>(<*>) DNS Proxy SMB
network changed: <*>(<*>) <*>(<*>) DNS! Proxy SMB
network changed: DNS*
network changed: DNS* Proxy
NETWORK: no response from server, reachability, <*>, queryRetries, <*>
NETWORK: requery, <*>, <*>, <*>, <*>, <*>, items, fQueryRetries, <*>, fLastRetryTimestamp, <*>
network_reachability_changed : network is not reachable, netbiosd is shutting down
no application identifier provided, can't use provisioning profiles [pid=<*>]
no sleep images for WillPowerOffWithImages
NSURLSession/NSURLConnection HTTP load failed (kCFStreamErrorDomainSSL, <*>)
<*> successfully changed NAT64 ifstate from <*> to <*>
nw_path_evaluator_start_helper_connection net_helper_path_evaluation_start failed, dumping backtrace: [<*>] <*> <*>   libsystem_network.dylib             <*> __nw_create_backtrace_string + <*> <*>   libsystem_network.dylib             <*> nw_path_evaluator_start_helper_connection + <*> <*>   libdispatch.dylib                   <*> _dispatch_call_block_and_release + <*> <*>   libdispatch.dylib                   <*> _dispatch_client_callout + <*> <*>   libdispatch.dylib                   <*> _dispatch_queue_drain + <*> <*>   libdispatch.dylib                   <*> _dispatch_queue_invoke + <*> <*>   libdispatch.dylib                   <*> _dispatch_root_queue_drain + <*> <*>   libdispatch.dylib                   <*> _dispatch_worker_<*> + <*> <*>   libsystem_pthread.dylib             <*> _pthread_wqthread + <*> <*>   libsystem_pthread.dylib             <*> start_wqthread + <*>
objc[<*>]: Class TSUAtomicLRUCache is implemented in both <*> and <*>. One of the two will be used. Which one is undefined.
objc[<*>]: Class TSUCustomFormatData is implemented in both <*> and <*>. One of the two will be used. Which one is undefined.
Opened file <*>, size <*>, extents <*>, maxio <*> ssd <*>
Page bounds {{<*>, <*>}, {<*>, <*>}}
pages <*>, wire <*>, act <*>, inact <*>, cleaned <*> spec <*>, zf <*>, throt <*>, compr <*>, xpmapped <*>
Path not allowed in target domain: type = <*>, path = <*> error = <*>: The specified service did not ship in the requestor's bundle, origin = <*>
payload Data <*> <*>
PBRequester failed with Error Error Domain=NSURLErrorDomain Code=<*> "The Internet connection appears to be offline." UserInfo={NSUnderlyingError=<*> {Error Domain=kCFErrorDomainCFNetwork Code=<*> "The Internet connection appears to be offline." UserInfo={NSErrorFailingURLStringKey=<*>, NSErrorFailingURLKey=<*>, _kCFStreamErrorCodeKey=<*>, _kCFStreamErrorDomainKey=<*>, NSLocalizedDescription=The Internet connection appears to be offline.}}, NSErrorFailingURLStringKey=<*>, NSErrorFailingURLKey=<*>, _kCFStreamErrorDomainKey=<*>, _kCFStreamErrorCodeKey=<*>, NSLocalizedDescription=The Internet connection appears to be offline.}
PBRequester failed with Error Error Domain=NSURLErrorDomain Code=<*> "The request timed out." UserInfo={NSUnderlyingError=<*> {Error Domain=kCFErrorDomainCFNetwork Code=<*> "The request timed out." UserInfo={NSErrorFailingURLStringKey=<*>, NSErrorFailingURLKey=<*>, _kCFStreamErrorCodeKey=<*>, _kCFStreamErrorDomainKey=<*>, NSLocalizedDescription=The request timed out.}}, NSErrorFailingURLStringKey=<*>, NSErrorFailingURLKey=<*>, _kCFStreamErrorDomainKey=<*>, _kCFStreamErrorCodeKey=<*>, NSLocalizedDescription=The request timed out.}
Peripheral manager is not powered on
PM response took <*> ms (<*>, <*>)
PMStats: Hibernate read took <*> ms
polled file major <*>, minor <*>, blocksize <*>, pollers <*>
Previous sleep cause: <*>
Received Capture Event
RTC: Maintenance <*>/<*>/<*> <*>:<*>, sleep <*>/<*>/<*> <*>:<*>
RTC: PowerByCalendarDate setting ignored
Sandbox: <*>(<*>) deny(<*>) file-read-data <*>
Sandbox: <*>(<*>) deny(<*>) ipc-posix-shm-read-data CFPBS:<*>:
Sandbox: <*>(<*>) deny(<*>) mach-lookup <*>
Sandbox: <*>(<*>) deny(<*>) network-outbound <*>
Saw change in network reachability (isReachable=<*>)
schedule invalidation <DYTransport <*>, error: lost transport connection (<*>)>
SecOSStatusWith error:[<*>] Error Domain=NSOSStatusErrorDomain Code=<*> "query missing class name" (paramErr: error in user parameter list) UserInfo={NSDescription=query missing class name}
securityd_xpc_dictionary_handler cloudd[<*>] copy_matching Error Domain=NSOSStatusErrorDomain Code=<*> "query missing class name" (paramErr: error in user parameter list) UserInfo={NSDescription=query missing class name}
send_datagram_available_ping: pid <*> failed to act on a ping it dequeued before timing out.
Service "<*>" tried to hijack endpoint "<*>" from owner: <*>
Service exited with abnormal code: <*>
Session <*> created
Session <*> destroyed
Setting BTCoex Config: <*>, <*>, <*>, <*>
setting hostname to "<*>"
sigio_handler: sigio_handler_active != <*>
SOSAccountThisDeviceCanSyncWithCircle sync with device failure: Error Domain=<*> Code=<*> "Account identity not set" UserInfo={NSDescription=<*> identity not set}
TBT W (<*>): <*> [x]
tcp_connection_destination_handle_tls_close_notify <*> closing socket due to TLS CLOSE_NOTIFY alert
tcp_connection_destination_perform_socket_connect <*> connectx to <*>@<*> failed: [<*>] Network is down
tcp_connection_destination_perform_socket_connect <*> connectx to <*>@<*> failed: [<*>] Network is unreachable
tcp_connection_handle_connect_conditions_bad <*> failed: <*> - No network route
tcp_connection_tls_session_error_callback_imp <*> <*> error <*>
Telling CSI to go low power.
the url = <*>
Thermal pressure state: <*> Memory pressure state: <*>
Unable to simultaneously satisfy constraints: ( "<NSAutoresizingMaskLayoutConstraint:<*> h=-&- v=-&- V:[NSScrollView:<*>]-(<*>)-|   (Names: '|':NSView:<*> )>", "<NSAutoresizingMaskLayoutConstraint:<*> h=-&- v=-&- V:|-(<*>)-[NSScrollView:<*>]   (Names: '|':NSView:<*> )>", "<NSAutoresizingMaskLayoutConstraint:<*> h=-&- v=--& V:[NSView:<*>(<*>)]>", "<NSAutoresizingMaskLayoutConstraint:<*> h=-&- v=-&- V:|-(<*>)-[NSView:<*>]   (Names: '|':NSView:<*> )>", "<NSAutoresizingMaskLayoutConstraint:<*> h=-&- v=-&- V:[NSView:<*>]-(<*>)-|   (Names: '|':NSView:<*> )>" )  Will attempt to recover by breaking constraint <NSAutoresizingMaskLayoutConstraint:<*> h=-&- v=-&- V:|-(<*>)-[NSScrollView:<*>]   (Names: '|':NSView:<*> )>  Set the NSUserDefault NSConstraintBasedLayoutVisualizeMutuallyExclusiveConstraints to YES to have -[NSWindow visualizeConstraints:] automatically called when this happens.  And/or, break on objc_exception_throw to catch this in the debugger.
Unable to simultaneously satisfy constraints: ( "<NSLayoutConstraint:<*> H:[NSImageView:<*>(<*>)]>", "<NSLayoutConstraint:<*> H:|-(<*>)-[NSImageView:<*>]   (Names: PageItemCell:<*>, '|':PageItemCell:<*> )>", "<NSLayoutConstraint:<*> 'NSView-Encapsulated-Layout-Width' H:[PageItemCell(<*>)]   (Names: PageItemCell:<*> )>", "<NSLayoutConstraint:<*> H:[NSImageView:<*>]-(<*>)-[NSTextField:<*>]>", "<NSLayoutConstraint:<*> H:[NSTextField:<*>]-(<*>)-|   (Names: PageItemCell:<*>, '|':PageItemCell:<*> )>", "<NSLayoutConstraint:<*> H:[NSTextField:<*>]-(>=NSSpace(<*>))-[NSTextField:<*>]>" )  Will attempt to recover by breaking constraint <NSLayoutConstraint:<*> H:[NSImageView:<*>(<*>)]>  Set the NSUserDefault NSConstraintBasedLayoutVisualizeMutuallyExclusiveConstraints to YES to have -[NSWindow visualizeConstraints:] automatically called when this happens.  And/or, break on objc_exception_throw to catch this in the debugger.
Unable to start NetBIOS name service:
Unexpected payload found for message <*>, dataLen <*>
Unrecognized attribute value: t:AbchPersonItemType
Unrecognized XSSimpleTypeDefinition: OneOff
url host = <*>
USBMSC Identifier (non-unique): <*> <*> <*> <*>, <*>
VDCAssistant:  Found a camera (<*>) , but was not able to start it up (<*> -- (os/kern) successful)
vm_compressor_fastwake_warmup (<*> - <*>) - starting
vm_compressor_fastwake_warmup completed - took <*> msecs
Wake reason: ?
Wake reason: ARPT (Network)
Wake reason: EC.SleepTimer (SleepTimer)
Wake reason: RTC (Alarm)
wake time set <*> s
WARNING: hibernate_page_list_setall skipped <*> xpmapped pages
WARNING: Type1 font data isn't in the correct format required by the Adobe Type <*> Font Format specification.
